{"ast":null,"code":"import _slicedToArray from \"/Users/Alkane/Desktop/github/Assignment2/a2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/Alkane/Desktop/github/Assignment2/a2/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/Alkane/Desktop/github/Assignment2/a2/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport uuid from 'uuid/v1';\nimport { ADD_ITEM } from '../actions/AddItem';\nimport { DELETE_ITEM } from '../actions/DeleteItem';\nimport { EDIT_ITEM } from '../actions/EditItem';\nimport { SELECT_EDIT_ITEM } from '../actions/SelectEditItem';\nimport { REORDER_ITEM } from '../actions/ReorderItem';\nvar INITIAL_STATE = {\n  items: []\n};\n\nvar messagesReducer = function messagesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_ITEM:\n      {\n        var id = uuid();\n        var messageItem = {\n          value: action.payload.value,\n          id: id\n        };\n        return _objectSpread({}, state, {\n          items: [].concat(_toConsumableArray(state.items), [messageItem])\n        });\n      }\n\n    case CANCEL_EDIT_ITEM:\n      {\n        var newState = state.items.length ? _objectSpread({}, state, {\n          editingItem: {}\n        }) : _objectSpread({}, state);\n        return newState;\n      }\n\n    case DELETE_ITEM:\n      {\n        var items = state.items.filter(function (_ref) {\n          var id = _ref.id;\n          return id !== action.payload.id;\n        });\n        return _objectSpread({}, state, {\n          items: items\n        });\n      }\n\n    case EDIT_ITEM:\n      {\n        var _items = state.items.map(function (item) {\n          if (item.id === action.payload.modifiedItem.id) {\n            item.value = action.payload.modifiedItem.value;\n          }\n\n          return item;\n        });\n\n        return _objectSpread({}, state, {\n          items: _items,\n          editingItem: {}\n        });\n      }\n\n    case SELECT_EDIT_ITEM:\n      {\n        var item = state.items.find(function (_ref2) {\n          var id = _ref2.id;\n          return id === action.payload.id;\n        });\n        return _objectSpread({}, state, {\n          editingItem: item\n        });\n      }\n\n    case REORDER_ITEM:\n      {\n        var clone = _toConsumableArray(state.items);\n\n        var _clone$splice = clone.splice(action.payload.initialPosition, 1),\n            _clone$splice2 = _slicedToArray(_clone$splice, 1),\n            removed = _clone$splice2[0];\n\n        clone.splice(action.payload.newPosition, 0, removed);\n        return _objectSpread({}, state, {\n          items: clone\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default messagesReducer;","map":{"version":3,"sources":["/Users/Alkane/Desktop/github/Assignment2/a2/src/reducers/Messages.js"],"names":["uuid","ADD_ITEM","DELETE_ITEM","EDIT_ITEM","SELECT_EDIT_ITEM","REORDER_ITEM","INITIAL_STATE","items","messagesReducer","state","action","type","id","messageItem","value","payload","CANCEL_EDIT_ITEM","newState","length","editingItem","filter","map","item","modifiedItem","find","clone","splice","initialPosition","removed","newPosition"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,SAAjB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAAtB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BH,aAA0B;AAAA,MAAXI,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKV,QAAL;AAAe;AACb,YAAMW,EAAE,GAAGZ,IAAI,EAAf;AACA,YAAMa,WAAW,GAAG;AAClBC,UAAAA,KAAK,EAAEJ,MAAM,CAACK,OAAP,CAAeD,KADJ;AAElBF,UAAAA,EAAE,EAAFA;AAFkB,SAApB;AAKA,iCAAYH,KAAZ;AAAmBF,UAAAA,KAAK,+BAAME,KAAK,CAACF,KAAZ,IAAmBM,WAAnB;AAAxB;AACD;;AAED,SAAKG,gBAAL;AAAuB;AACrB,YAAMC,QAAQ,GAAGR,KAAK,CAACF,KAAN,CAAYW,MAAZ,qBAA0BT,KAA1B;AAAiCU,UAAAA,WAAW,EAAE;AAA9C,+BAA0DV,KAA1D,CAAjB;AACA,eAAOQ,QAAP;AACD;;AAED,SAAKf,WAAL;AAAkB;AAChB,YAAMK,KAAK,GAAGE,KAAK,CAACF,KAAN,CAAYa,MAAZ,CAAmB;AAAA,cAAGR,EAAH,QAAGA,EAAH;AAAA,iBAAYA,EAAE,KAAKF,MAAM,CAACK,OAAP,CAAeH,EAAlC;AAAA,SAAnB,CAAd;AACA,iCAAYH,KAAZ;AAAmBF,UAAAA,KAAK,EAALA;AAAnB;AACD;;AAED,SAAKJ,SAAL;AAAgB;AACd,YAAMI,MAAK,GAAGE,KAAK,CAACF,KAAN,CAAYc,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACpC,cAAIA,IAAI,CAACV,EAAL,KAAYF,MAAM,CAACK,OAAP,CAAeQ,YAAf,CAA4BX,EAA5C,EAAgD;AAC9CU,YAAAA,IAAI,CAACR,KAAL,GAAaJ,MAAM,CAACK,OAAP,CAAeQ,YAAf,CAA4BT,KAAzC;AACD;;AAED,iBAAOQ,IAAP;AACD,SANa,CAAd;;AAQA,iCAAYb,KAAZ;AAAmBF,UAAAA,KAAK,EAALA,MAAnB;AAA0BY,UAAAA,WAAW,EAAE;AAAvC;AACD;;AAED,SAAKf,gBAAL;AAAuB;AACrB,YAAMkB,IAAI,GAAGb,KAAK,CAACF,KAAN,CAAYiB,IAAZ,CAAiB;AAAA,cAAGZ,EAAH,SAAGA,EAAH;AAAA,iBAAYA,EAAE,KAAKF,MAAM,CAACK,OAAP,CAAeH,EAAlC;AAAA,SAAjB,CAAb;AACA,iCAAYH,KAAZ;AAAmBU,UAAAA,WAAW,EAAEG;AAAhC;AACD;;AAED,SAAKjB,YAAL;AAAmB;AACjB,YAAMoB,KAAK,sBAAOhB,KAAK,CAACF,KAAb,CAAX;;AADiB,4BAECkB,KAAK,CAACC,MAAN,CAAahB,MAAM,CAACK,OAAP,CAAeY,eAA5B,EAA6C,CAA7C,CAFD;AAAA;AAAA,YAEVC,OAFU;;AAGjBH,QAAAA,KAAK,CAACC,MAAN,CAAahB,MAAM,CAACK,OAAP,CAAec,WAA5B,EAAyC,CAAzC,EAA4CD,OAA5C;AAEA,iCAAYnB,KAAZ;AAAmBF,UAAAA,KAAK,EAAEkB;AAA1B;AACD;;AAED;AAAS;AACP,eAAOhB,KAAP;AACD;AAjDH;AAmDD,CApDD;;AAsDA,eAAeD,eAAf","sourcesContent":["import uuid from 'uuid/v1';\n\nimport { ADD_ITEM } from '../actions/AddItem';\nimport { DELETE_ITEM } from '../actions/DeleteItem';\nimport { EDIT_ITEM } from '../actions/EditItem';\nimport { SELECT_EDIT_ITEM } from '../actions/SelectEditItem';\nimport { REORDER_ITEM } from '../actions/ReorderItem';\n\nconst INITIAL_STATE = {\n  items: [],\n};\n\nconst messagesReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    \n    case ADD_ITEM: {\n      const id = uuid();\n      const messageItem = {\n        value: action.payload.value,\n        id,\n      };\n\n      return { ...state, items: [...state.items, messageItem] };\n    }\n\n    case CANCEL_EDIT_ITEM: {\n      const newState = state.items.length ? { ...state, editingItem: {} } : { ...state };\n      return newState;\n    }\n\n    case DELETE_ITEM: {\n      const items = state.items.filter(({ id }) => id !== action.payload.id);\n      return { ...state, items };\n    }\n\n    case EDIT_ITEM: {\n      const items = state.items.map(item => {\n        if (item.id === action.payload.modifiedItem.id) {\n          item.value = action.payload.modifiedItem.value;\n        }\n\n        return item;\n      });\n\n      return { ...state, items, editingItem: {} };\n    }\n\n    case SELECT_EDIT_ITEM: {\n      const item = state.items.find(({ id }) => id === action.payload.id);\n      return { ...state, editingItem: item };\n    }\n\n    case REORDER_ITEM: {\n      const clone = [...state.items];\n      const [removed] = clone.splice(action.payload.initialPosition, 1);\n      clone.splice(action.payload.newPosition, 0, removed);\n\n      return { ...state, items: clone };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default messagesReducer;\n"]},"metadata":{},"sourceType":"module"}